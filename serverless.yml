

service: s3andsns # NOTE: update this with your service name

plugins:
  - serverless-pseudo-parameters

custom:
  topicName: 's3uploadTopic'
  accountId: '#{AWS::AccountId}'
  region: '#{AWS::Region}'

provider:
  name: aws
  runtime: nodejs8.10
  environment: ${self:custom}

# you can overwrite defaults here
  stage: ${opt:stage, 'dev'}
  region: us-east-1

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "SNS:Publish"
      Resource: "arn:aws:sns:#{AWS::Region}:#{AWS::AccountId}:${self:custom.topicName}"

#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  hello:
    handler: handler.hello
    events:
      - s3:
          bucket: p3special
          event: s3:ObjectCreated:*
          rules:
            - suffix: .txt
  bye:
    handler: handler.bye
    events: 
      - s3:
          bucket: p3special
          event: s3:ObjectRemoved:*
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000
#      - alexaSkill: amzn1.ask.skill.xx-xx-xx-xx
#      - alexaSmartHome: amzn1.ask.skill.xx-xx-xx-xx
#      - iot:
#          sql: "SELECT * FROM 'some_topic'"
#      - cloudwatchEvent:
#          event:
#            source:
#              - "aws.ec2"
#            detail-type:
#              - "EC2 Instance State-change Notification"
#            detail:
#              state:
#                - pending
#      - cloudwatchLog: '/aws/lambda/hello'
#      - cognitoUserPool:
#          pool: MyUserPool
#          trigger: PreSignUp

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
 Resources:
   NewTopic:
     Type: AWS::SNS::Topic
     Properties:
       TopicName: ${self:custom.topicName}
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
